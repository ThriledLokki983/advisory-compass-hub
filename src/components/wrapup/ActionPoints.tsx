
import React from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Info, FileEdit, Save } from 'lucide-react';

interface ActionPoint {
  id: string;
  content: string;
  assignee: string;
}

interface ActionPointsProps {
  actionPoints: ActionPoint[];
  onEdit: () => void;
  onShare: () => void;
}

const ActionPoints: React.FC<ActionPointsProps> = ({
  actionPoints,
  onEdit,
  onShare
}) => {
  // Group action points by assignee
  const groupedPoints = actionPoints.reduce((acc, point) => {
    if (!acc[point.assignee]) {
      acc[point.assignee] = [];
    }
    acc[point.assignee].push(point);
    return acc;
  }, {} as Record<string, ActionPoint[]>);

  return (
    <div className="max-w-5xl mx-auto">
      <div className="bg-white shadow-sm flex items-center justify-between mb-1">
        <div className="flex items-center p-5 text-sm text-gray-500">
          <Info
            className="h-4 w-4 mr-2"
            color="#1B1464"
            style={{ color: '#1B1464', stroke: 'red' }}
          />
          <span>Generated by AI. Check for accuracy.</span>
        </div>
    </div>

    <div className="bg-white rounded-lg p-8 shadow-sm">
      {Object.entries(groupedPoints).map(([assignee, points]) => (
        <div key={assignee}>
          <h3
            className="text-[#1B1464] text-[18px] font-[600] mb-2"
            style={{
              marginTop: assignee === Object.keys(groupedPoints)[0] ? 0 : 8
            }}
          >
            Action points for {assignee}
          </h3>
          <ol className="mb-4">
            {points.map((point) => (
              <li key={point.id} className="ml-6 list-disc text-[#1B1464] text-[16px] font-[300] mb-2">
                <p>{point.content}</p>
              </li>
            ))}
          </ol>
        </div>
      ))}
    </div>
    </div>
  );
};

export default ActionPoints;
